// form

@import "~bootstrap/scss/mixins";
@import "~bootstrap/scss/forms";
@import "~bootstrap/scss/input-group";

// scss-lint:disable QualifyingElement, VendorPrefix

//
// Textual form controls
//

.form-control {
  position: relative;
  line-height: $input-btn-line-height;
  border-radius: $form-control-radius;

  // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214.
  background-image: none;

  &:focus {
    border-color: $secondary;
    // box-shadow: none !important;
    background-color: $white !important;
    box-shadow: $shadow-depth1;
  }
}

.form-control-sm {
  line-height: 1.45;
}

.form-control-lg {
  line-height: 1.8;
}

select:-moz-focusring {
  color: transparent !important;
  text-shadow: 0 0 0 #000;
}

select.form-control {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;

  &:focus::-ms-value {
    // Suppress the nested default white text on blue background highlight given to
    // the selected option text when the (still closed) <select> receives focus
    // in IE and (under certain conditions) Edge, as it looks bad and cannot be made to
    // match the appearance of the native widget.
    // See https://github.com/twbs/bootstrap/issues/19398.
    color: $input-color;
    background-color: $white;
    // box-shadow: 0 1px 3px 0px $gray-rgba-400;
  }
}

select:not([multiple]) {
  -webkit-appearance: button;
  -webkit-padding-end: 1.75rem;
  -webkit-padding-start: .875rem;
  -webkit-user-select: none;
  background-image: url('./sort.svg?fill=%23#{$icon-theme-light}');
  background-repeat: no-repeat;
  background-position: right .5rem center;
  background-size: auto 14px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  padding-right: 1.75rem;
  padding-left: .875rem;
}

select:not([multiple]).form-control-sm {
  -webkit-padding-start: $input-btn-padding-x-sm;
  padding-left: $input-btn-padding-x-sm;
}

select:not([multiple]).form-control-radius-round {
  -webkit-padding-start: 1rem;
  padding-left: 1rem;
}

select:not([multiple]).form-control-lg {
  -webkit-padding-start: $input-padding-x-lg;
  padding-left: $input-padding-x-lg;
}

//
// Label
//

label {
  margin-bottom: .25rem;
}


//
// Legends
//

// For use with horizontal and inline forms, when you need the legend text to
// be the same size as regular labels, and to align with the form controls.

legend {
  font-size: 1rem;
  font-weight: 500;
  letter-spacing: .01em;
}

.col-form-legend {
  padding-top: $input-btn-padding-y;
  padding-bottom: $input-btn-padding-y;
  margin-bottom: 0;
  font-size: 1rem;
}


// custom styles

.form-control + .form-control,
.input-group + .input-group {
  margin-top: 1.5rem;
}

.form-control-static {
  display: block;
  width: 100%;
  padding: .5rem .75rem;
  font-size: .825rem;
  line-height: 1.25;
  background-color: transparent;
  border-color: transparent;
}

.form-control-lg.form-control-static {
  padding: 0.75rem 1.5rem;
  font-size: 1rem;
}

input[type='text']:hover,
.form-control:hover,
.form-control.form-control-success:hover,
.form-control.form-control-warning:hover,
.form-control.form-control-danger:hover,
.form-control.form-control-info:hover {
  // box-shadow: 0 1px 3px 0px $gray-rgba-200;
}

select:focus option:checked {
  background-color: theme-color("secondary");
}

input[type='text']:focus,
.form-control:focus,
.was-validated .form-control:valid,
.was-validated .custom-select:valid {
  background-color: $body-bg;
  // box-shadow: 0 1px 3px 0px $gray-rgba-400 !important;
}

.form-label-strong {
  font-size: .9em;
  font-weight: 600;
  text-transform: uppercase;
  color: $body-color;
  margin-top: 2px;
}

.form-group .form-control-label {
  cursor: pointer;
}

.form-group > label,
.form-check > label {
  margin-right: $form-item-spacing;
}

.form-inline .form-check-label,
.form-inline .form-control-label {
  position: relative;
  display: inline-flex;
  margin-bottom: 0;
  align-items: center;
  line-height: 1.3;
  vertical-align: middle;

  &:hover {
    cursor: pointer;
  }
}

input[type="radio"],
input[type="checkbox"] {
  flex: 0 0 auto;
}

.form-inline .sr-only {
  position: absolute;
}

// stacked form-inline

.form-inline + .form-inline {
  margin-top: .75rem;
}

.form-inline .form-group {
  margin-right: $form-item-spacing;
}

.form-control:not(.form-control-sm).round {
  padding-left: 1rem;
}


// disabled form-control

.form-control:disabled,
.form-control.disabled {
  opacity: $btn-disabled-opacity;
  cursor: not-allowed;
  box-shadow: none !important;
}

.form-check.disabled,
.form-check.disabled .form-check-label {
  cursor: not-allowed;
}


// Radius parameter styles

.form-control-radius-round {
  border-radius: $round;
}

.form-control-radius-none {
  border-radius: 0;
}


// form bg themes

.form-control-theme-white {
  background-color: $white;
}


// forms in page-header or card-header - could use utility classes

.screen-header-container form,
.card-header form {
  display: inline-block;  // use .d-inline-block
  vertical-align: middle;
}

.screen-header-container .form-group,
.card-header .form-group {
  margin-bottom: 0;  // use mb-0
}

.card-header .form-check-label,
.card-header .form-control-label {
  font-size: .825rem;
}

.card-header .form-label-strong {
  font-size: .75rem;
}
