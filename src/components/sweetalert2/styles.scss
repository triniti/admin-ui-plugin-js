// SweetAlert2

@import "~bootstrap/scss/mixins";

// button-outline mixin
@mixin button-outline-text-variant($color, $color-hover: #fff) {
  color: $color;
  background: $white;
  background-image: none;
  border-color: $gray-700 !important;

  @include hover {
    color: $color;
    background: $gray-400;
    background-image: none !important;
    border-color: $gray-700 !important;;
  }

  &:focus,
  &.focus {
    box-shadow: 0 0 0 3px rgba($color, .5);
  }

  &.disabled,
  &:disabled {
    color: $color;
    background-color: transparent;
  }

  &:active,
  &.active,
  .show > &.dropdown-toggle {
    color: $color;
    background-color: $gray-400;
    border-color: $gray-700 !important;;
  }
}


.swal2-container {

  & .swal2-show {
    animation: triniti-bounce 0.3s;
  }
  & .swal2-popup {
    border-radius: $border-radius-xl;
    padding: 2.5rem 1.5rem 1.5rem 1.5rem;
    font-size: .875rem;
    box-shadow: $shadow-depth-6;
  }
  & .swal2-popup .swal2-title {
    color: $body-color;
    font-size: 1.675rem;
    font-weight: 500;
    letter-spacing: .008em;
  }
  & .swal2-popup .swal2-content {
    color: $body-color-light;
    margin-bottom: .5rem;
    font-weight: 400;
  }
  & .swal2-icon {
    margin-top: 0;
    border-width: 3px;
  }
  & .swal2-icon-text {
    font-weight: 500;
  }
  &.swal2-shown {
    background-color: rgba($body-color, 0.33) !important;
  }
  .swal2-popup .swal2-actions {
    flex-wrap: wrap;
  }

  // Button Colors
  & .swal2-popup .swal2-styled.swal2-confirm {
    margin-bottom: .5rem;
    @if $enable-gradients {
      background: theme-color("secondary") linear-gradient(180deg, mix($body-bg, theme-color("secondary"), 15%), theme-color("secondary")) repeat-x;
    } @else {
      background-color: theme-color("secondary");
    }
    border: 1px solid darken(theme-color("secondary"), 5%) !important;
    box-shadow: $shadow-depth-3;

    &:hover {
      background: theme-color("secondary") linear-gradient(180deg, darken(mix($body-bg, theme-color("secondary"), 15%), 15%), darken(theme-color("secondary"), 15%)) repeat-x;
      border: 1px solid darken(theme-color("secondary"), 10%) !important;
    }
  }

  & .swal2-popup .swal2-styled.swal2-cancel {
    margin-bottom: .5rem;
    @if $enable-gradients {
      background: theme-color("dark") linear-gradient(180deg, mix($body-bg, theme-color("dark"), 15%), theme-color("dark")) repeat-x;
    } @else {
      background-color: theme-color("dark");
    }
    border: 1px solid darken(theme-color("dark"), 5%) !important;
    box-shadow: $shadow-depth-3;

    &:hover {
      background: theme-color("dark") linear-gradient(180deg, darken(mix($body-bg, theme-color("dark"), 15%), 15%), darken(theme-color("dark"), 15%)) repeat-x;
      border: 1px solid darken(theme-color("dark"), 10%) !important;
    }
  }

  & .swal2-popup .swal2-styled,
  & .swal2-popup .swal2-actions:not(.swal2-loading) .swal2-styled {

    @each $color, $value in $theme-colors {
      &.btn-#{$color} {
        @include button-variant($value, $value);
        border: 1px solid darken($value, 5%) !important;

        &:hover,
        &:focus {
          border: 1px solid darken($value, 10%) !important;
        }
      }
      &.btn-warning {
        color: $white;
      }
      &.btn-outline-#{$color} {
        @include button-outline-variant($value);
        border: 1px solid darken($value, 5%) !important;

        &:hover,
        &:focus {
          border: 1px solid darken($value, 10%) !important;
        }
      }
      &.btn-outline-text-#{$color} {
        @include button-outline-text-variant($value, #fff);
      }
      &.btn-outline-text-light {
        color: $body-color;

        &:hover,
        &:focus {
          color: $body-color;
        }
        &:active,
        &.active {
          color: $body-color;
        }
      }
    }
  }

  // Icon Colors
  & .swal2-icon.swal2-error {
    border-color: theme-color('danger');
    color: theme-color('danger');

    & [class^='swal2-x-mark-line'] {
      background-color: theme-color('danger');
      border-radius: 1rem;
      height: .325em;
    }
  }
  & .swal2-icon.swal2-question {
    border-color: theme-color('dark');
    color: theme-color('dark');

    & [class^='swal2-x-mark-line'] {
      background-color: theme-color('dark');
      border-radius: 1rem;
    }
  }
  & .swal2-icon.swal2-warning {
    border-color: theme-color('warning');
    color: theme-color('warning');

    & [class^='swal2-x-mark-line'] {
      background-color: theme-color('warning');
      border-radius: 1rem;
    }
  }
  & .swal2-icon.swal2-info {
    border-color: theme-color('info');
    color: theme-color('info');

    & [class^='swal2-x-mark-line'] {
      background-color: theme-color('info');
      border-radius: 1rem;
    }
  }
  & .swal2-icon.swal2-success {
    border-color: theme-color('success');
    color: theme-color('success');

    & .swal2-success-ring {
      top: -3px;
      left: -3px;
      border-color: rgba(theme-color('success'), 1);
      border-width: 3px;
      animation: 1s ease 0s normal forwards 1 swal-border-fadein;
    }

    & [class^='swal2-success-line'] {
      background-color: theme-color('success');
      border-radius: 1rem;
      height: .325em;
    }
  }
}

@keyframes swal-border-fadein {
  0% {
    opacity:.3;
  }
  33% {
    opacity:.3;
  }
  100% {
    opacity:1;
  }
}
